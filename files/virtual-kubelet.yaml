apiVersion: v1
kind: ServiceAccount
metadata:
  name: virtual-node-sa
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: virtual-node-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: virtual-node-sa
    namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: virtual-node-controller
  namespace: kube-system
  labels:
    app: virtual-node-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: virtual-node-controller
  template:
    metadata:
      labels:
        app: virtual-node-controller
    spec:
      serviceAccount: virtual-node-sa
      containers:
      - name: alicloud-virtual-kubelet
        image: registry.cn-hangzhou.aliyuncs.com/acs/virtual-nodes-eci:v1.0.0.3-aliyun
        imagePullPolicy: Always
        args: ["--provider", "alibabacloud"]
        env:
        - name: KUBELET_PORT
          value: "10250"
        - name: VKUBELET_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: VKUBELET_TAINT_KEY
          value: "virtual-kubelet.io/provider"
        - name: VKUBELET_TAINT_VALUE
          value: "alibabacloud"
        - name: VKUBELET_TAINT_EFFECT
          value: "NoSchedule"
        - name: ECI_REGION
          #区域id，与ecs保持一致
          value: "{{ ECI_REGION }}"
        - name: ECI_VPC
          #专有网络id，与ecs保持一致
          value: "{{ ECI_VPC }}"
        - name: ECI_VSWITCH
          #虚拟交换机id，建议多写几个，防止区域没有资源
          value: "{{ ECI_VSWITCH }}"
        - name: ECI_SECURITY_GROUP
          #安全组id，与ecs保持一致
          value: "{{ ECI_SECURITY_GROUP }}"
        - name: ECI_ACCESS_KEY
          #AccessKey ID
          value: "{{ ECI_ACCESS_KEY }}"
        - name: ECI_SECRET_KEY
          #AccessKey Secret
          value: "{{ ECI_SECRET_KEY }}"
          #集群id，自定义
        - name: ALIYUN_CLUSTERID
          value: "{{ ALIYUN_CLUSTERID }}"
